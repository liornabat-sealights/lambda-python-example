version: '3'


tasks:
  install:
    cmds:
      - pip install --no-cache-dir ../SL.OnPremise.Agents.Python
  config:
    cmds:
      - sl-python config --appname lambda-python-example --tokenfile ./sltoken.txt --exclude "*venv*" --workspacepath ./src/dir1
  scan:
    env:
    cmds:
      - sl-python scan --buildsessionidfile ./buildSessionId.txt --tokenfile ./sltoken.txt
  configlambda:
    cmds:
      - sl-python configlambda --slconfigpaths "./src/dir1/function_1,./src/dir1/function_2" --collectorurl "https://all-peas-press.loca.lt" --exportlayerpath "./"

  deploy_prod:
    cmds:
      - sam build -u -t template_prod.yaml
      - sam deploy
  deploy_local:
    cmds:
      - sam build -u -t template_prod.yaml
      - sam local invoke HelloWorldFunction
#      - sam local invoke Function2
  deploy_sl:
    cmds:
      - sam build -u -t template_prod.yaml
      - sam deploy

  start:
    cmds:
      - sl-python start  --teststage stage_1

  end:
    env:
    #      SL_DEBUG: true
    cmds:
      - sl-python end --teststage stage_1

  prod_ci:
    cmds:
      - task: deploy_prod

  sl_hello:
    cmds:
      - sl-python config --appname lambda-python-example --tokenfile ./sltoken.txt --exclude "*venv*" --workspacepath ./hello_world
      - sl-python scan --buildsessionidfile ./buildSessionId.txt --tokenfile ./sltoken.txt
      - sl-python configlambda --slconfigpaths "./hello_world" --collectorurl "https://all-peas-press.loca.lt" --exportlayerpath "./"

  deploy_hello:
    cmds:
      - sam build -u -t template_sl_2.yaml
      - sam local invoke -e event.json HelloWorldFunction
  sl_ci:
    cmds:
      - task: install
      - task: config
      - task: scan
      - task: configlambda
      - task: deploy_local

